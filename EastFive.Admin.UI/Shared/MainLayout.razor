@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject DialogService dialogService
@using Radzen.Blazor
@using Radzen;
@using EastFive;
@using EastFive.Linq;
@using EastFive.Extensions;

<RadzenDialog />

@*<div class="sidebar">
        <NavMenu />
    </div>*@

<div class="main">
    <div class="top-row px-4">
        @if (Session.Sessions.AnyNullSafe())
        {
            <RadzenSplitButton class="navbar-brand" 
                               Click="@((args) => SelectSession(args))" 
                               Text="@Session.selectedSession.Value.title" 
                               Style="margin-bottom: 20px;">
                <ChildContent>
                    @foreach (var session in Session.Sessions)
                    {
                        <RadzenSplitButtonItem Text="@session.title" Value="@session.id.ToString("N")" />
                    }
                    <RadzenSplitButtonItem Text="New" Value="" />
                </ChildContent>
            </RadzenSplitButton>
        }
        else
        {
            <RadzenSplitButton class="navbar-brand"
                               Click="@((args) => SelectSession(args))"
                               Text="Add Session" Style="margin-bottom: 20px;">
            </RadzenSplitButton>
        }
    </div>

    <div>
        <RadzenMenu>
            <RadzenMenuItem Text="Admin" Icon="account_balance">
                <RadzenMenuItem Text="Azure Storage Tables" Path="AzureStorageTables" Icon="list_alt"></RadzenMenuItem>
                <RadzenMenuItem Text="CRUD" Path="crud" Icon="create"></RadzenMenuItem>
                <RadzenMenuItem Text="Redirect Urls" Path="RedirectUrls" Icon="create"></RadzenMenuItem>
                <RadzenMenuItem Text="Sessions" Path="Sessions" Icon="create"></RadzenMenuItem>
                <RadzenMenuItem Text="Backups" Path="Backups" Icon="settings_backup_restore"></RadzenMenuItem>
                <RadzenMenuItem Text="Accounts" Path="Accounts" Icon="create"></RadzenMenuItem>
                <RadzenMenuItem Text="Claims" Path="Accounts/Claims" Icon="settings"></RadzenMenuItem>
                <RadzenMenuItem Text="Configuration Settings" Path="ConfigurationSettings" Icon="settings"></RadzenMenuItem>
                <RadzenMenuItem Text="Functions" Path="Functions" Icon="settings"></RadzenMenuItem>
                <RadzenMenuItem Text="CORS">
                    <RadzenIcon>
                        <svg viewBox="0 0 16 16" class="" role="presentation" focusable="false" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="FxSymbol0-127" data-type="1"><g><title></title><path d="M3.137 14.351a7.994 7.994 0 0 1-1.49-11.212A7.983 7.983 0 0 1 8.007 0c1.694 0 3.404.532 4.854 1.648a7.993 7.993 0 0 1 1.491 11.215A7.989 7.989 0 0 1 7.992 16a7.968 7.968 0 0 1-4.855-1.649" class="msportalfx-svg-c16"></path><path d="M11.599.824a7.883 7.883 0 0 0-1.233-.496c-1.469 2.175-4.03 4.7-6.332 6.646-.017.015-.024.03-.039.045a10.656 10.656 0 0 1-1.163-1.6S1.995 7.392 1.4 9.8c2.651.478 5.108-.359 5.108-.359s-.792-.624-1.695-1.537c2.348-1.812 4.924-4.331 6.786-7.08z" class="msportalfx-svg-c01"></path><path d="M13.725 4.612s-.432.544-1.515 1.418C10.088 3.628 6.788 2 3.054 1.672a7.532 7.532 0 0 0-1.431 1.449l-.022.031c.327.012.657.035.989.07 3.1.254 5.976 1.87 7.937 4.04-.567.378-1.216.784-1.965 1.21 0 0 2.732.807 5.041 2.469.68-2.889.122-6.329.122-6.329zM8 10.2A1.8 1.8 0 0 0 6.2 12c0 .027.007.053.008.08a12.33 12.33 0 0 1-4.943.295c.325.5.711.97 1.154 1.397a13.546 13.546 0 0 0 4.306-.502A1.8 1.8 0 1 0 8 10.2z" class="msportalfx-svg-c01"></path></g></svg>
                    </RadzenIcon>
                </RadzenMenuItem>
            </RadzenMenuItem>
        </RadzenMenu>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>

@code {
    private string token = "";
    private string serverUrl = "";
    private string tableToken = "";

    private const string AddServerValue = "addServer";
    private const string ManuallySpecifyValue = "manual";

    public static DialogOptions dialogOptions =
        new DialogOptions()
        {
            Width = "calc(100% - 200px)",
            Height = "calc(100% - 200px)",
            Left = "calc(100px)",
            Top = "calc(100px)"
        };

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Server.OnInitializedAsync(localStorage);
        await Session.OnInitializedAsync(localStorage);
        dialogService.OnClose += (args) =>
            {
                StateHasChanged();
            };
        await Components.Login.ProcessRedirectAsync(NavigationManager, localStorage, dialogService);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!Session.selectedSession.HasValue)
        {
            if (!Session.Sessions.AnyNullSafe())
            {
                CreateSession();
                return;
            }
            Session.selectedSession = Session.Sessions.First();
        }
    }

    private void CreateSession()
    {
        var sessionId = Session.selectedSession.HasValue ? Session.selectedSession.Value.id : default(Guid?);
        dialogService.Open<EastFive.Admin.UI.Pages.SessionCreation>($"Session Creation",
        new Dictionary<string, object>()
        {
                {
                    "SessionId",
                    sessionId
                },
        },
        dialogOptions);
    }

    private async void SelectSession(RadzenSplitButtonItem item)
    {
        if (item != null)
        {
            if (Guid.TryParse(item.Value, out Guid sessionId))
            {
                var newSelectedSession = Session.Sessions
                    .Where(serverSessionKvp => serverSessionKvp.id == sessionId)
                    .First();
                await Session.SelectSessionAsync(newSelectedSession, localStorage);
                return;
            }

            dialogService.Open<EastFive.Admin.UI.Pages.SessionCreation>($"New Session",
                new Dictionary<string, object>()
                {
                    { "SessionId", default(Guid?)   }
                },
                dialogOptions);
            return;
        }

        dialogService.Open<EastFive.Admin.UI.Pages.SessionCreation>($"Edit Session",
            new Dictionary<string, object>()
            {
                { 
                    "SessionId",
                    Session.selectedSession.HasValue? 
                        Session.selectedSession.Value.id
                        :
                        default(Guid?)
                }
            },
            dialogOptions);
    }
}
}