@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        <input type="text" value="@token" @onchange="UpdateToken" />
        <input type="text" value="@serverUrl" @onchange="UpdateServerUrl" />
        <input type="text" value="@tableToken" @onchange="UpdateTableToken" />
        <a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>

@code {
    private string token = "";
    private string serverUrl = "";
    private string tableToken = "";

    [Inject]
    public NavigationManager NavigationManager {get; set;}

    protected override async Task OnParametersSetAsync()
    {
        token = await localStorage.GetItemAsync<string>(Comms.authorizationTokenStorageKey);
        
        tableToken = await localStorage.GetItemAsync<string>(TableData.storageTableInformationTokenName);

        var storedServerUrl = await localStorage.GetItemAsync<string>("serverUrl");
        Console.WriteLine($"Stored Server URL = {storedServerUrl}");
        if(storedServerUrl.HasBlackSpace())
        {
            this.serverUrl = storedServerUrl;
            return;
        }
        storedServerUrl = NavigationManager.BaseUri;
        Console.WriteLine($"Updating Stored Server URL = {storedServerUrl}");
        await this.localStorage.SetItemAsync("serverUrl", storedServerUrl);
    }

    private async Task UpdateToken(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        Console.WriteLine($"Token = {token}");
        Console.WriteLine($"Token Could be = {args.Value}");
        await localStorage.SetItemAsync(Comms.authorizationTokenStorageKey, args.Value);
    }

    private async Task UpdateServerUrl(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        Console.WriteLine($"Server URL = {serverUrl}");
        Console.WriteLine($"Server URL Could be = {args.Value}");
        await localStorage.SetItemAsync("serverUrl", args.Value);
    }

    private async Task UpdateTableToken(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        Console.WriteLine($"Table Token Wil be = {args.Value}");
        await localStorage.SetItemAsync(TableData.storageTableInformationTokenName, args.Value);
    }
}